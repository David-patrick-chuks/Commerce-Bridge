version: '3.8'

services:
  # FastAPI Application
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      # MongoDB Configuration
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB:-commercebridge}
      - MONGO_COLLECTION=${MONGO_COLLECTION:-products}
      
      # Redis Configuration
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      
      # Cloudinary Configuration
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      
      # Application Configuration
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-0}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Security
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      
      # API Configuration
      - API_V1_STR=${API_V1_STR:-/api/v1}
      - PROJECT_NAME=${PROJECT_NAME:-Taja}
      
      # File Upload Configuration
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-104857600}
      - ALLOWED_IMAGE_TYPES=${ALLOWED_IMAGE_TYPES:-image/jpeg,image/png,image/webp}
      - ALLOWED_VIDEO_TYPES=${ALLOWED_VIDEO_TYPES:-video/mp4,video/avi,video/mov,video/mkv}
      
      # AI Model Configuration
      - CLIP_MODEL_NAME=${CLIP_MODEL_NAME:-ViT-L/14}
      - EMBEDDING_DIMENSION=${EMBEDDING_DIMENSION:-768}
      - SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.7}
      
      # Monitoring
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
      - ENABLE_HEALTH_CHECKS=${ENABLE_HEALTH_CHECKS:-true}
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker
  worker:
    build: .
    command: celery -A app.worker.celery_app worker --loglevel=info --pool=solo --concurrency=1
    environment:
      # MongoDB Configuration
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB:-commercebridge}
      - MONGO_COLLECTION=${MONGO_COLLECTION:-products}
      
      # Redis Configuration
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      
      # Cloudinary Configuration
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      
      # Application Configuration
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-0}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Security
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      
      # API Configuration
      - API_V1_STR=${API_V1_STR:-/api/v1}
      - PROJECT_NAME=${PROJECT_NAME:-Taja}
      
      # File Upload Configuration
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-104857600}
      - ALLOWED_IMAGE_TYPES=${ALLOWED_IMAGE_TYPES:-image/jpeg,image/png,image/webp}
      - ALLOWED_VIDEO_TYPES=${ALLOWED_VIDEO_TYPES:-video/mp4,video/avi,video/mov,video/mkv}
      
      # AI Model Configuration
      - CLIP_MODEL_NAME=${CLIP_MODEL_NAME:-ViT-L/14}
      - EMBEDDING_DIMENSION=${EMBEDDING_DIMENSION:-768}
      - SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.7}
      
      # Monitoring
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
      - ENABLE_HEALTH_CHECKS=${ENABLE_HEALTH_CHECKS:-true}
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "app.worker.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flower - Celery Monitoring
  flower:
    build: .
    command: celery -A app.worker.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
    depends_on:
      - redis
      - worker
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Add SSL certificates here
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - nginx  # Only start with: docker-compose --profile nginx up

volumes:
  redis_data: 